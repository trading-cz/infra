name: hcloud-maintenance
on:
  workflow_dispatch:
    inputs:
      env:
        description: "Environment to target (dev|prod)"
        required: true
        default: "dev"
      action:
        description: "list|destroy"
        required: true
        default: "list"
        type: choice
        options: [list, destroy]

jobs:
  hcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Install hcloud CLI
        uses: hetznercloud/setup-hcloud@v1
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}

      - name: List all resources by env
        if: ${{ inputs.action == 'list' }}
        run: |
          echo "== Servers =="
          hcloud server list -l environment=${{ inputs.env }} -o columns=id,name,public_net.ipv4,labels
          echo
          echo "== Volumes =="
          hcloud volume list -l environment=${{ inputs.env }} -o columns=id,name,size,labels || true
          echo
          echo "== Load Balancers =="
          hcloud load-balancer list -l environment=${{ inputs.env }} -o columns=id,name,labels || true
          echo
          echo "== Floating IPs =="
          hcloud floating-ip list -l environment=${{ inputs.env }} -o columns=id,description,ip,labels || true
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}

      - name: Destroy ALL resources by env
        if: ${{ inputs.action == 'destroy' }}
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
        run: |
          set -euo pipefail

          # Delete servers first (this implicitly removes their primary IPs)
          mapfile -t SRVS < <(hcloud server list -l environment=${{ inputs.env }} -o noheader -o columns=id)
          if [ ${#SRVS[@]} -gt 0 ]; then
            echo "Deleting ${#SRVS[@]} servers..."
            hcloud server delete "${SRVS[@]}"
          else
            echo "No servers found."
          fi

          # Volumes
          mapfile -t VOLS < <(hcloud volume list -l environment=${{ inputs.env }} -o noheader -o columns=id || true)
          if [ ${#VOLS[@]} -gt 0 ]; then
            echo "Deleting ${#VOLS[@]} volumes..."
            hcloud volume delete "${VOLS[@]}"
          fi

          # Load balancers
          mapfile -t LBS < <(hcloud load-balancer list -l environment=${{ inputs.env }} -o noheader -o columns=id || true)
          if [ ${#LBS[@]} -gt 0 ]; then
            echo "Deleting ${#LBS[@]} load balancers..."
            hcloud load-balancer delete "${LBS[@]}"
          fi

          # Floating IPs (if you create them)
          mapfile -t FIPS < <(hcloud floating-ip list -l environment=${{ inputs.env }} -o noheader -o columns=id || true)
          if [ ${#FIPS[@]} -gt 0 ]; then
            echo "Deleting ${#FIPS[@]} floating IPs..."
            hcloud floating-ip delete "${FIPS[@]}"
          fi
``
